# API server
- query: histogram_quantile(0.99, sum(rate(apiserver_request_duration_seconds_bucket{apiserver="kube-apiserver", verb!~"WATCH", subresource!="log"}[2m])) by (verb,resource,subresource,instance,le)) > 0
  metricName: API99thLatency

- query: sum(irate(apiserver_request_total{apiserver="kube-apiserver",verb!="WATCH",subresource!="log"}[2m])) by (verb,instance,resource,code) > 0
  metricName: APIRequestRate

# P&F
- query: rate(apiserver_flowcontrol_dispatched_requests_total[2m]) > 0
  metricName: APIFlowControlDispatchedRequests

- query: sum(apiserver_flowcontrol_current_executing_requests) by (instance, priority_level,flow_schema) > 0
  metricName: APIFlowControlCurrentExecutingRequests

- query: rate(apiserver_flowcontrol_rejected_requests_total[2m]) > 0
  metricName: APIFlowControlRejectedRequests

- query: sum(apiserver_flowcontrol_current_inqueue_requests) by (instance, flow_schema, priority_level) > 0
  metricName: APIFlowControlInqueueRequests

- query: avg(apiserver_flowcontrol_request_concurrency_limit{}) by (priority_level)
  metricName: APIFlowControlRequestConcurrencyLimit
  instant: true

# Containers & pod metrics
- query: sum(irate(container_cpu_usage_seconds_total{name!="",container!="POD",namespace=~"openshift-(etcd|oauth-apiserver|.*apiserver|ovn-kubernetes|sdn|ingress|authentication|.*controller-manager|.*scheduler|monitoring|image-registry|operator-lifecycle-manager)"}[2m]) * 100) by (container, pod, namespace, node)
  metricName: containerCPU

- query: sum(container_memory_rss{name!="",container!="POD",namespace=~"openshift-(etcd|oauth-apiserver|.*apiserver|ovn-kubernetes|sdn|ingress|authentication|.*controller-manager|.*scheduler|monitoring|image-registry|operator-lifecycle-manager)"}) by (container, pod, namespace, node)
  metricName: containerMemory

- query: (sum(rate(container_fs_writes_bytes_total{container!="",device!~".+dm.+"}[5m])) by (device, container, node) and on (node) kube_node_role{role="master"}) > 0
  metricName: containerDiskUsage

# Kubelet & CRI-O metrics
- query: sum(irate(process_cpu_seconds_total{service="kubelet",job="kubelet"}[2m]) * 100) by (node) and on (node) kube_node_role{role="worker"}
  metricName: kubeletCPU

- query: sum(process_resident_memory_bytes{service="kubelet",job="kubelet"}) by (node) and on (node) kube_node_role{role="worker"}
  metricName: kubeletMemory

- query: sum(irate(process_cpu_seconds_total{service="kubelet",job="crio"}[2m]) * 100) by (node) and on (node) kube_node_role{role="worker"}
  metricName: crioCPU

- query: sum(process_resident_memory_bytes{service="kubelet",job="crio"}) by (node) and on (node) kube_node_role{role="worker"}
  metricName: crioMemory

- query: irate(container_runtime_crio_operations_latency_microseconds{operation_type="network_setup_pod"}[2m]) > 0
  metricName: containerNetworkSetupLatency

- query: irate(container_runtime_crio_operations_latency_microseconds{operation_type="network_setup_overall"}[2m]) > 0
  metricName: containerNetworkSetupOverallLatency

# Node metrics
- query: (sum(irate(node_cpu_seconds_total[2m])) by (mode,instance) and on (instance) label_replace(kube_node_role{role="worker"}, "instance", "$1", "node", "(.+)")) > 0
  metricName: nodeCPU-workers

- query: (sum(irate(node_cpu_seconds_total[2m])) by (mode,instance) and on (instance) label_replace(kube_node_role{role="master"}, "instance", "$1", "node", "(.+)")) > 0
  metricName: nodeCPU-masters

- query: (sum(irate(node_cpu_seconds_total[2m])) by (mode,instance) and on (instance) label_replace(kube_node_role{role="infra"}, "instance", "$1", "node", "(.+)")) > 0
  metricName: nodeCPU-infra

- query: node_memory_MemAvailable_bytes and on (instance) label_replace(kube_node_role{role="master"}, "instance", "$1", "node", "(.+)")
  metricName: nodeMemoryAvailable-Masters

- query: node_memory_MemAvailable_bytes and on (instance) label_replace(kube_node_role{role="worker"}, "instance", "$1", "node", "(.+)")
  metricName: nodeMemoryAvailable-Workers

- query: node_memory_MemAvailable_bytes and on (instance) label_replace(kube_node_role{role="infra"}, "instance", "$1", "node", "(.+)")
  metricName: nodeMemoryAvailable-AggregatedInfra

- query: node_memory_MemTotal_bytes and on (instance) label_replace(kube_node_role{role="master"}, "instance", "$1", "node", "(.+)")
  metricName: nodeMemoryTotal-Masters
  instant: true

- query: node_memory_MemTotal_bytes and on (instance) label_replace(kube_node_role{role="worker"}, "instance", "$1", "node", "(.+)")
  metricName: nodeMemoryTotal-Workers
  instant: true

- query: node_memory_MemTotal_bytes and on (instance) label_replace(kube_node_role{role="infra"}, "instance", "$1", "node", "(.+)")
  metricName: nodeMemoryTotal-Infra
  instant: true

- query: irate(node_network_receive_bytes_total{device=~"^(ens|eth|bond|team).*"}[2m])
  metricName: rxNetworkBytes

- query: irate(node_network_transmit_bytes_total{device=~"^(ens|eth|bond|team).*"}[2m])
  metricName: txNetworkBytes

- query: rate(node_disk_written_bytes_total{device!~"^(dm|rb).*"}[2m])
  metricName: nodeDiskWrittenBytes

- query: rate(node_disk_read_bytes_total{device!~"^(dm|rb).*"}[2m])
  metricName: nodeDiskReadBytes

# Etcd metrics
- query: sum(rate(etcd_server_leader_changes_seen_total[2m]))
  metricName: etcdLeaderChangesRate

- query: etcd_server_is_leader > 0
  metricName: etcdServerIsLeader

- query: histogram_quantile(0.99, rate(etcd_disk_backend_commit_duration_seconds_bucket[2m]))
  metricName: 99thEtcdDiskBackendCommitDurationSeconds

- query: histogram_quantile(0.99, rate(etcd_disk_wal_fsync_duration_seconds_bucket[2m]))
  metricName: 99thEtcdDiskWalFsyncDurationSeconds

- query: histogram_quantile(0.99, rate(etcd_network_peer_round_trip_time_seconds_bucket[5m]))
  metricName: 99thEtcdRoundTripTimeSeconds

- query: etcd_mvcc_db_total_size_in_bytes
  metricName: etcdDBPhysicalSizeBytes

- query: etcd_mvcc_db_total_size_in_use_in_bytes
  metricName: etcdDBLogicalSizeBytes

- query: sum(rate(etcd_object_counts{}[5m])) by (resource) > 0
  metricName: etcdObjectCount

- query: sum by (cluster_version)(etcd_cluster_version)
  metricName: etcdVersion
  instant: true

# Cluster metrics
- query: sum(kube_namespace_status_phase) by (phase) > 0
  metricName: namespaceCount

- query: sum(kube_pod_status_phase{}) by (phase)
  metricName: podStatusCount

- query: kube_pod_status_phase{phase="Failed"} > 0
  metricName: failedPods

- query: count(kube_secret_info{})
  metricName: secretCount
  instant: true

- query: count(kube_deployment_labels{})
  metricName: deploymentCount
  instant: true

- query: count(kube_configmap_info{})
  metricName: configmapCount
  instant: true

- query: count(kube_service_info{})
  metricName: serviceCount
  instant: true

- query: kube_node_role
  metricName: nodeRoles

- query: sum(kube_node_status_condition{status="true"}) by (condition)
  metricName: nodeStatus

- query: cluster_version{type="completed"}
  metricName: clusterVersion
  instant: true

- query: topk(10,ALERTS{severity!="none"})
  metricName: alerts
