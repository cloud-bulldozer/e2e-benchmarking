---

apiVersion: ripsaw.cloudbulldozer.io/v1alpha1
kind: Benchmark
metadata:
  name: kube-burner-${WORKLOAD}-${UUID}
  namespace: benchmark-operator
spec:
  uuid: ${UUID}
  # Metadata information
  elasticsearch:
    url: ${ES_SERVER}
  metadata:
    collection: ${METADATA_COLLECTION}
    privileged: true
  cerberus_url: "${CERBERUS_URL}"
  prometheus:
    # Elastic search instance with full URL format. http://elastic.apps.org:9200
    es_url: ${ES_SERVER}
    # Prometheus bearer token
    prom_token: ${PROM_TOKEN}
    # Prometheus URL with full URL format. https://prometheus-k8s.openshift-monitoring.svc.cluster.local:9091
    prom_url: ${PROM_URL}
  workload:
    name: kube-burner
    args:
      extra_env_vars:
        QPS: ${QPS} 
        BURST: ${BURST}
        POD_READY_TIMEOUT: ${POD_READY_TIMEOUT}
        CLEANUP: ${CLEANUP}
        POD_NODE_SELECTOR: ${POD_NODE_SELECTOR}
        WAIT_WHEN_FINISHED: ${WAIT_WHEN_FINISHED}
        POD_WAIT: ${POD_WAIT}
        WAIT_FOR: ${WAIT_FOR}
        VERIFY_OBJECTS: ${VERIFY_OBJECTS}
        ERROR_ON_VERIFY: ${ERROR_ON_VERIFY}
      # Kube-burner Job timeout
      job_timeout: ${JOB_TIMEOUT}
      # ES index name
      default_index: ${ES_INDEX}
      # Pin kube-burner to a node using the value of the label kubernetes.io/hostname
      pin_server: ${NODE_SELECTOR}
      # Use a custom kube-burner image
      image: ${KUBE_BURNER_IMAGE}
      # Log level. Allowed, info and debug
      log_level: ${LOG_LEVEL}
      # kube-burner pod tolerations
      tolerations: ${TOLERATIONS}
      # Prometheus step size
      step: ${STEP_SIZE}
      # Remote configuration file
      remote_config: ${REMOTE_CONFIG}
      # Remote metric profile
      remote_metrics_profile: ${REMOTE_METRIC_PROFILE}
      # Remote alert profile
      remote_alert_profile: ${REMOTE_ALERT_PROFILE}
